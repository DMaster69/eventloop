webpackJsonp([2,3],{

/***/ 307:
/***/ function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* skel.js v3.0.1 | (c) skel.io | MIT licensed */\r\n\r\nvar skel = (function() { \"use strict\"; var _ = {\r\n\r\n\t/******************************/\r\n\t/* Properties                 */\r\n\t/******************************/\r\n\r\n\t\t/**\r\n\t\t * IDs of breakpoints that are currently active.\r\n\t\t * @type {array}\r\n\t\t */\r\n\t\tbreakpointIds: null,\r\n\r\n\t\t/**\r\n\t\t * Events.\r\n\t\t * @type {object}\r\n\t\t */\r\n\t\tevents: {},\r\n\r\n\t\t/**\r\n\t\t * Are we initialized?\r\n\t\t * @type {bool}\r\n\t\t */\r\n\t\tisInit: false,\r\n\r\n\t\t/**\r\n\t\t * Objects.\r\n\t\t * @type {object}\r\n\t\t */\r\n\t\tobj: {\r\n\r\n\t\t\t// Attachments.\r\n\t\t\t\tattachments: {},\r\n\r\n\t\t \t// Breakpoints.\r\n\t\t\t\tbreakpoints: {},\r\n\r\n\t\t\t// Head.\r\n\t\t\t\thead: null,\r\n\r\n\t\t\t// States.\r\n\t\t\t\tstates: {}\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * State ID delimiter (don't change this).\r\n\t\t * @type {string}\r\n\t\t */\r\n\t\tsd: '/',\r\n\r\n\t\t/**\r\n\t\t * Current state.\r\n\t\t * @type {object}\r\n\t\t */\r\n\t\tstate: null,\r\n\r\n\t\t/**\r\n\t\t * State handlers.\r\n\t\t * @type {object}\r\n\t\t */\r\n\t\tstateHandlers: {},\r\n\r\n\t\t/**\r\n\t\t * Current state ID.\r\n\t\t * @type {string}\r\n\t\t */\r\n\t\tstateId: '',\r\n\r\n\t\t/**\r\n\t\t * Internal vars.\r\n\t\t * @type {object}\r\n\t\t */\r\n\t\tvars: {},\r\n\r\n\t/******************************/\r\n\t/* Methods: Utility           */\r\n\t/******************************/\r\n\r\n\t\t/**\r\n\t\t * Does stuff when the DOM is ready.\r\n\t\t * @param {function} f Function.\r\n\t\t */\r\n\t\tDOMReady: null,\r\n\r\n\t\t/**\r\n\t\t * Wrapper/polyfill for (Array.prototype|String).indexOf.\r\n\t\t * @param {Array|string} search Object or string to search.\r\n\t\t * @param {integer} from Starting index.\r\n\t\t * @return {integer} Matching index (or -1 if there's no match).\r\n\t\t */\r\n\t\tindexOf: null,\r\n\r\n\t\t/**\r\n\t\t * Wrapper/polyfill for Array.isArray.\r\n\t\t * @param {array} x Variable to check.\r\n\t\t * @return {bool} If true, x is an array. If false, x is not an array.\r\n\t\t */\r\n\t\tisArray: null,\r\n\r\n\t\t/**\r\n\t\t * Safe replacement for \"for..in\". Avoids stuff that doesn't belong to the array itself (eg. properties added to Array.prototype).\r\n\t\t * @param {Array} a Array to iterate.\r\n\t\t * @param {function} f(index) Function to call on each element.\r\n\t\t */\r\n\t\titerate: null,\r\n\r\n\t\t/**\r\n\t\t * Determines if a media query matches the current browser state.\r\n\t\t * @param {string} query Media query.\r\n\t\t * @return {bool} True if it matches, false if not.\r\n\t\t */\r\n\t\tmatchesMedia: null,\r\n\r\n\t\t/**\r\n\t\t * Extends x by y.\r\n\t\t * @param {object} x Target object.\r\n\t\t * @param {object} y Source object.\r\n\t\t */\r\n\t\textend: function(x, y) {\r\n\r\n\t\t\t_.iterate(y, function(k) {\r\n\r\n\t\t\t\tif (_.isArray(y[k])) {\r\n\r\n\t\t\t\t\tif (!_.isArray(x[k]))\r\n\t\t\t\t\t\tx[k] = [];\r\n\r\n\t\t\t\t\t_.extend(x[k], y[k]);\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse if (typeof y[k] == 'object') {\r\n\r\n\t\t\t\t\tif (typeof x[k] != 'object')\r\n\t\t\t\t\t\tx[k] = {};\r\n\r\n\t\t\t\t\t_.extend(x[k], y[k]);\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t\tx[k] = y[k];\r\n\r\n\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Creates a new style element.\r\n\t\t * @param {string} content Content.\r\n\t\t * @return {DOMHTMLElement} Style element.\r\n\t\t */\r\n\t\tnewStyle: function(content) {\r\n\r\n\t\t\tvar e = document.createElement('style');\r\n\t\t\t\te.type = 'text/css';\r\n\t\t\t\te.innerHTML = content;\r\n\r\n\t\t\treturn e;\r\n\r\n\t\t},\r\n\r\n\t/******************************/\r\n\t/* Methods: API               */\r\n\t/******************************/\r\n\r\n\t\t/**\r\n\t\t * Temporary element for canUse()\r\n\t\t * @type {DOMElement}\r\n\t\t */\r\n\t\t_canUse: null,\r\n\r\n\t\t/**\r\n\t\t * Determines if the browser supports a given property.\r\n\t\t * @param {string} p Property.\r\n\t\t * @return {bool} True if property is supported, false if not.\r\n\t\t */\r\n\t\tcanUse: function(p) {\r\n\r\n\t\t\t// Create temporary element if it doesn't already exist.\r\n\t\t\t\tif (!_._canUse)\r\n\t\t\t\t\t_._canUse = document.createElement('div');\r\n\r\n\t\t\t// Check for property.\r\n\t\t\t\tvar e = _._canUse.style,\r\n\t\t\t\t\tup = p.charAt(0).toUpperCase() + p.slice(1);\r\n\r\n\t\t\t\treturn\t(\r\n\t\t\t\t\t\t\tp in e\r\n\t\t\t\t\t\t||\t('Moz' + up) in e\r\n\t\t\t\t\t\t||\t('Webkit' + up) in e\r\n\t\t\t\t\t\t||\t('O' + up) in e\r\n\t\t\t\t\t\t||\t('ms' + up) in e\r\n\t\t\t\t);\r\n\r\n\t\t},\r\n\r\n\t/******************************/\r\n\t/* Methods: Events            */\r\n\t/******************************/\r\n\r\n\t\t/**\r\n\t\t * Registers one or more events.\r\n\t\t * @param {string} names Space-delimited list of event names.\r\n\t\t * @param {function} f Function.\r\n\t\t */\r\n\t\ton: function(names, f) {\r\n\r\n\t\t\tvar a = names.split(/[\\s]+/);\r\n\r\n\t\t\t_.iterate(a, function(i) {\r\n\r\n\t\t\t\tvar name = a[i];\r\n\r\n\t\t\t\t// Manually trigger event if applicable.\r\n\t\t\t\t\tif (_.isInit) {\r\n\r\n\t\t\t\t\t\t// Init.\r\n\t\t\t\t\t\t\tif (name == 'init') {\r\n\r\n\t\t\t\t\t\t\t\t// Trigger event.\r\n\t\t\t\t\t\t\t\t\t(f)();\r\n\r\n\t\t\t\t\t\t\t\t// This only gets called once, so there's no need to actually\r\n\t\t\t\t\t\t\t\t// register it.\r\n\t\t\t\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Change.\r\n\t\t\t\t\t\t\telse if (name == 'change') {\r\n\r\n\t\t\t\t\t\t\t\t// Trigger event.\r\n\t\t\t\t\t\t\t\t\t(f)();\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Activate / Not.\r\n\t\t\t\t\t\t\telse {\r\n\r\n\t\t\t\t\t\t\t\tvar x = name.charAt(0);\r\n\r\n\t\t\t\t\t\t\t\tif (x == '+' || x == '!') {\r\n\r\n\t\t\t\t\t\t\t\t\tvar y = name.substring(1);\r\n\r\n\t\t\t\t\t\t\t\t\tif (y in _.obj.breakpoints) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t// Activate.\r\n\t\t\t\t\t\t\t\t\t\t\tif (x == '+' && _.obj.breakpoints[y].active) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t// Trigger event.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(f)();\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t// Not.\r\n\t\t\t\t\t\t\t\t\t\t\telse if (x == '!' && !_.obj.breakpoints[y].active) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t// Trigger event.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(f)();\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t// This only gets called once, so there's no need to actually\r\n\t\t\t\t\t\t\t\t\t\t\t\t// register it.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t// No previous events of this type registered? Set up its array.\r\n\t\t\t\t\tif (!_.events[name])\r\n\t\t\t\t\t\t_.events[name] = [];\r\n\r\n\t\t\t\t// Register event.\r\n\t\t\t\t\t_.events[name].push(f);\r\n\r\n\t\t\t});\r\n\r\n\t\t\treturn _;\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Triggers an event.\r\n\t\t * @param {string} name Name.\r\n\t\t */\r\n\t\ttrigger: function(name) {\r\n\r\n\t\t\t// No events registered? Bail.\r\n\t\t\t\tif (!_.events[name] || _.events[name].length == 0)\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t// Step through and call events.\r\n\t\t\t\t_.iterate(_.events[name], function(k) {\r\n\t\t\t\t\t(_.events[name][k])();\r\n\t\t\t\t});\r\n\r\n\t\t\treturn _;\r\n\r\n\t\t},\r\n\r\n\t/******************************/\r\n\t/* Methods: Breakpoints       */\r\n\t/******************************/\r\n\r\n\t\t/**\r\n\t\t * Gets a breakpoint.\r\n\t\t * @param {string} id Breakpoint ID.\r\n\t\t * @return {Breakpoint} Breakpoint.\r\n\t\t */\r\n\t\tbreakpoint: function(id) {\r\n\t\t\treturn _.obj.breakpoints[id];\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Sets breakpoints.\r\n\t\t * @param {object} breakpoints Breakpoints.\r\n\t\t */\r\n\t\tbreakpoints: function(breakpoints) {\r\n\r\n\t\t\t// Breakpoint class.\r\n\t\t\t\tfunction Breakpoint(id, media) {\r\n\r\n\t\t\t\t\tthis.name = this.id = id;\r\n\t\t\t\t\tthis.media = media;\r\n\t\t\t\t\tthis.active = false;\r\n\t\t\t\t\tthis.wasActive = false;\r\n\r\n\t\t\t\t};\r\n\r\n\t\t\t\t\tBreakpoint.prototype.matches = function() {\r\n\t\t\t\t\t\treturn (_.matchesMedia(this.media));\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tBreakpoint.prototype.sync = function() {\r\n\r\n\t\t\t\t\t\tthis.wasActive = this.active;\r\n\t\t\t\t\t\tthis.active = this.matches();\r\n\r\n\t\t\t\t\t};\r\n\r\n\t\t\t// Create breakpoints.\r\n\t\t\t\t_.iterate(breakpoints, function(id) {\r\n\t\t\t\t\t_.obj.breakpoints[id] = new Breakpoint(id, breakpoints[id]);\r\n\t\t\t\t});\r\n\r\n\t\t\t// Initial poll.\r\n\t\t\t\twindow.setTimeout(function() {\r\n\t\t\t\t\t_.poll();\r\n\t\t\t\t}, 0);\r\n\r\n\t\t\treturn _;\r\n\r\n\t\t},\r\n\r\n\t/******************************/\r\n\t/* Methods: States            */\r\n\t/******************************/\r\n\r\n\t\t/**\r\n\t\t * Adds a state handler.\r\n\t\t * @param {string} id ID.\r\n\t\t * @param {function} f Handler function.\r\n\t\t */\r\n\t\taddStateHandler: function(id, f) {\r\n\r\n\t\t\t// Add handler.\r\n\t\t\t\t_.stateHandlers[id] = f;\r\n\r\n\t\t\t// Call it.\r\n\t\t\t\t//_.callStateHandler(id);\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Calls a state handler.\r\n\t\t * @param {string} id ID.\r\n\t\t */\r\n\t\tcallStateHandler: function(id) {\r\n\r\n\t\t\t// Call handler.\r\n\t\t\t\tvar attachments = (_.stateHandlers[id])();\r\n\r\n\t\t\t// Add attachments to state (if any).\r\n\t\t\t\t_.iterate(attachments, function(i) {\r\n\t\t\t\t\t_.state.attachments.push(attachments[i]);\r\n\t\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Switches to a different state.\r\n\t\t * @param {string} newStateId New state ID.\r\n\t\t */\r\n\t\tchangeState: function(newStateId) {\r\n\r\n\t\t\t// Sync all breakpoints.\r\n\t\t\t\t_.iterate(_.obj.breakpoints, function(id) {\r\n\t\t\t\t\t_.obj.breakpoints[id].sync();\r\n\t\t\t\t});\r\n\r\n\t\t\t// Set last state var.\r\n\t\t\t\t_.vars.lastStateId = _.stateId;\r\n\r\n\t\t\t// Change state ID.\r\n\t\t\t\t_.stateId = newStateId;\r\n\t\t\t\t_.breakpointIds = (_.stateId === _.sd ? [] : _.stateId.substring(1).split(_.sd));\r\n\r\n\t\t\t\tconsole.log('[skel] changing states (id: \"' + _.stateId + '\")');\r\n\r\n\t\t\t// Get state.\r\n\t\t\t\tif (!_.obj.states[_.stateId]) {\r\n\r\n\t\t\t\t\tconsole.log('[skel] - not found. building ...');\r\n\r\n\t\t\t\t\t// Build state.\r\n\t\t\t\t\t\t_.obj.states[_.stateId] = {\r\n\t\t\t\t\t\t\tattachments: []\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t_.state = _.obj.states[_.stateId];\r\n\r\n\t\t\t\t\t// Call all state handlers.\r\n\t\t\t\t\t\t_.iterate(_.stateHandlers, _.callStateHandler);\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\r\n\t\t\t\t\tconsole.log('[skel] - found');\r\n\r\n\t\t\t\t\t// Get state.\r\n\t\t\t\t\t\t_.state = _.obj.states[_.stateId];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t// Detach all attachments *EXCEPT* state's.\r\n\t\t\t\t_.detachAll(_.state.attachments);\r\n\r\n\t\t\t// Attach state's attachments.\r\n\t\t\t\t_.attachAll(_.state.attachments);\r\n\r\n\t\t\t// Expose state and stateId as vars.\r\n\t\t\t\t_.vars.stateId = _.stateId;\r\n\t\t\t\t_.vars.state = _.state;\r\n\r\n\t\t\t// Trigger change event.\r\n\t\t\t\t_.trigger('change');\r\n\r\n\t\t\t// Trigger activate/deactivate events.\r\n\t\t\t\t_.iterate(_.obj.breakpoints, function(id) {\r\n\r\n\t\t\t\t\t// Breakpoint is now active ...\r\n\t\t\t\t\t\tif (_.obj.breakpoints[id].active) {\r\n\r\n\t\t\t\t\t\t\t// ... and it wasn't active before? Trigger activate event.\r\n\t\t\t\t\t\t\t\tif (!_.obj.breakpoints[id].wasActive)\r\n\t\t\t\t\t\t\t\t\t_.trigger('+' + id);\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Breakpoint is not active ...\r\n\t\t\t\t\t\telse {\r\n\r\n\t\t\t\t\t\t\t// ... but it was active before? Trigger deactivate event.\r\n\t\t\t\t\t\t\t\tif (_.obj.breakpoints[id].wasActive)\r\n\t\t\t\t\t\t\t\t\t_.trigger('-' + id);\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Generates a state-specific config.\r\n\t\t * @param {object} baseConfig Base config.\r\n\t\t * @param {object} breakpointConfigs Breakpoint-specific configs.\r\n\t\t * @return {object} State-specific config.\r\n\t\t */\r\n\t\tgenerateStateConfig: function(baseConfig, breakpointConfigs) {\r\n\r\n\t\t\tvar x = {};\r\n\r\n\t\t\t// Extend with base config.\r\n\t\t\t\t_.extend(x, baseConfig);\r\n\r\n\t\t\t// Extend with configs for each active breakpoint.\r\n\t\t\t\t_.iterate(_.breakpointIds, function(k) {\r\n\t\t\t\t\t_.extend(x, breakpointConfigs[_.breakpointIds[k]]);\r\n\t\t\t\t});\r\n\r\n\t\t\treturn x;\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Gets the current state ID.\r\n\t\t * @return {string} State ID.\r\n\t\t */\r\n\t\tgetStateId: function() {\r\n\r\n\t\t\tvar stateId = '';\r\n\r\n\t\t\t_.iterate(_.obj.breakpoints, function(id) {\r\n\r\n\t\t\t\tvar b = _.obj.breakpoints[id];\r\n\r\n\t\t\t\t// Active? Append breakpoint ID to state ID.\r\n\t\t\t\t\tif (b.matches())\r\n\t\t\t\t\t\tstateId += _.sd + b.id;\r\n\r\n\t\t\t});\r\n\r\n\t\t\treturn stateId;\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Polls for state changes.\r\n\t\t */\r\n\t\tpoll: function() {\r\n\r\n\t\t\tvar newStateId = '';\r\n\r\n\t\t\t// Determine new state.\r\n\t\t\t\tnewStateId = _.getStateId();\r\n\r\n\t\t\t\tif (newStateId === '')\r\n\t\t\t\t\tnewStateId = _.sd;\r\n\r\n\t\t\t// State changed?\r\n\t\t\t\tif (newStateId !== _.stateId)\r\n\t\t\t\t\t_.changeState(newStateId);\r\n\r\n\t\t},\r\n\r\n\t/******************************/\r\n\t/* Methods: Attachments       */\r\n\t/******************************/\r\n\r\n\t\t/**\r\n\t\t * Attach point for attach()\r\n\t\t * @type {DOMElement}\r\n\t\t */\r\n\t\t_attach: null,\r\n\r\n\t\t/**\r\n\t\t * Attaches a single attachment.\r\n\t\t * @param {object} attachment Attachment.\r\n\t\t * @return bool True on success, false on failure.\r\n\t\t */\r\n\t\tattach: function(attachment) {\r\n\r\n\t\t\tvar\th = _.obj.head,\r\n\t\t\t\te = attachment.element;\r\n\r\n\t\t\t// Already attached? Bail.\r\n\t\t\t\tif (e.parentNode\r\n\t\t\t\t&&\te.parentNode.tagName)\r\n\t\t\t\t\treturn false;\r\n\r\n\t\t\t// Add to <head>\r\n\r\n\t\t\t\t// No attach point yet? Use <head>'s first child.\r\n\t\t\t\t\tif (!_._attach)\r\n\t\t\t\t\t\t_._attach = h.firstChild;\r\n\r\n\t\t\t\t// Insert element.\r\n\t\t\t\t\th.insertBefore(e, _._attach.nextSibling);\r\n\r\n\t\t\t\t// Permanent attachment? Make its element the new attach point.\r\n\t\t\t\t\tif (attachment.permanent)\r\n\t\t\t\t\t\t_._attach = e;\r\n\r\n\t\t\tconsole.log('[skel] ' + attachment.id + ': attached (' + attachment.priority + ')');\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Attaches a list of attachments.\r\n\t\t * @param {array} attachments Attachments.\r\n\t\t */\r\n\t\tattachAll: function(attachments) {\r\n\r\n\t\t\tvar a = [];\r\n\r\n\t\t\t// Organize attachments by priority.\r\n\t\t\t\t_.iterate(attachments, function(k) {\r\n\r\n\t\t\t\t\tif (!a[ attachments[k].priority ])\r\n\t\t\t\t\t\ta[ attachments[k].priority ] = [];\r\n\r\n\t\t\t\t\ta[ attachments[k].priority ].push(attachments[k]);\r\n\r\n\t\t\t\t});\r\n\r\n\t\t\t// Reverse array order.\r\n\t\t\t\ta.reverse();\r\n\r\n\t\t\t// Step through each priority.\r\n\t\t\t\t_.iterate(a, function(k) {\r\n\t\t\t\t\t_.iterate(a[k], function(x) {\r\n\t\t\t\t\t\t_.attach(a[k][x]);\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Detaches a single attachment.\r\n\t\t * @param {object} attachment Attachment.\r\n\t\t * @return bool True on success, false on failure.\r\n\t\t */\r\n\t\tdetach: function(attachment) {\r\n\r\n\t\t\tvar\te = attachment.element;\r\n\r\n\t\t\t// Permanent or already detached? Bail.\r\n\t\t\t\tif (attachment.permanent\r\n\t\t\t\t||\t!e.parentNode\r\n\t\t\t\t||\t(e.parentNode && !e.parentNode.tagName))\r\n\t\t\t\t\treturn false;\r\n\r\n\t\t\t// Detach.\r\n\t\t\t\te.parentNode.removeChild(e);\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Detaches all attachments.\r\n\t\t * @param {object} exclude A list of attachments to exclude.\r\n\t\t */\r\n\t\tdetachAll: function(exclude) {\r\n\r\n\t\t\tvar l = {};\r\n\r\n\t\t\t// Build exclusion list (for faster lookups).\r\n\t\t\t\t_.iterate(exclude, function(k) {\r\n\t\t\t\t\tl[exclude[k].id] = true;\r\n\t\t\t\t});\r\n\r\n\t\t\t_.iterate(_.obj.attachments, function(id) {\r\n\r\n\t\t\t\t// In our exclusion list? Bail.\r\n\t\t\t\t\tif (id in l)\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t// Attempt to detach.\r\n\t\t\t\t\t_.detach(_.obj.attachments[id]);\r\n\r\n\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\tattachment: function(id) {\r\n\t\t\treturn (id in _.obj.attachments ? _.obj.attachments[id] : null);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Creates a new attachment.\r\n\t\t * @param {string} id ID.\r\n\t\t * @param {DOMElement} element DOM element.\r\n\t\t */\r\n\t\tnewAttachment: function(id, element, priority, permanent) {\r\n\r\n\t\t\treturn (_.obj.attachments[id] = {\r\n\t\t\t\tid: id,\r\n\t\t\t\telement: element,\r\n\t\t\t\tpriority: priority,\r\n\t\t\t\tpermanent: permanent\r\n\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t/******************************/\r\n\t/* Methods: Init              */\r\n\t/******************************/\r\n\r\n\t\t/**\r\n\t\t * Initializes skel.\r\n\t\t * This has to be explicitly called by the user.\r\n\t\t */\r\n\t\tinit: function() {\r\n\r\n\t\t\t// Initialize stuff.\r\n\t\t\t\t_.initMethods();\r\n\t\t\t\t_.initVars();\r\n\t\t\t\t_.initEvents();\r\n\r\n\t\t\t// Tmp.\r\n\t\t\t\t_.obj.head = document.getElementsByTagName('head')[0];\r\n\r\n\t\t\t// Mark as initialized.\r\n\t\t\t\t_.isInit = true;\r\n\r\n\t\t\t// Trigger init event.\r\n\t\t\t\t_.trigger('init');\r\n\r\n\t\t\tconsole.log('[skel] initialized.');\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Initializes browser events.\r\n\t\t */\r\n\t\tinitEvents: function() {\r\n\r\n\t\t\t// On resize.\r\n\t\t\t\t_.on('resize', function() { _.poll(); });\r\n\r\n\t\t\t// On orientation change.\r\n\t\t\t\t_.on('orientationChange', function() { _.poll(); });\r\n\r\n\t\t\t// Wrap \"ready\" event.\r\n\t\t\t\t_.DOMReady(function() {\r\n\t\t\t\t\t_.trigger('ready');\r\n\t\t\t\t});\r\n\r\n\t\t\t// Non-destructively register skel events to window.\r\n\r\n\t\t\t\t// Load.\r\n\t\t\t\t\tif (window.onload)\r\n\t\t\t\t\t\t_.on('load', window.onload);\r\n\r\n\t\t\t\t\twindow.onload = function() { _.trigger('load'); };\r\n\r\n\t\t\t\t// Resize.\r\n\t\t\t\t\tif (window.onresize)\r\n\t\t\t\t\t\t_.on('resize', window.onresize);\r\n\r\n\t\t\t\t\twindow.onresize = function() { _.trigger('resize'); };\r\n\r\n\t\t\t\t// Orientation change.\r\n\t\t\t\t\tif (window.onorientationchange)\r\n\t\t\t\t\t\t_.on('orientationChange', window.onorientationchange);\r\n\r\n\t\t\t\t\twindow.onorientationchange = function() { _.trigger('orientationChange'); };\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Initializes methods.\r\n\t\t */\r\n\t\tinitMethods: function() {\r\n\r\n\t\t\t// _.DOMReady (based on github.com/ded/domready by @ded; domready (c) Dustin Diaz 2014 - License MIT)\r\n\r\n\t\t\t\t// Hack: Use older version for browsers that don't support addEventListener (*cough* IE8).\r\n\t\t\t\t\tif (!document.addEventListener)\r\n\t\t\t\t\t\t!function(e,t){_.DOMReady = t()}(\"domready\",function(e){function p(e){h=1;while(e=t.shift())e()}var t=[],n,r=!1,i=document,s=i.documentElement,o=s.doScroll,u=\"DOMContentLoaded\",a=\"addEventListener\",f=\"onreadystatechange\",l=\"readyState\",c=o?/^loaded|^c/:/^loaded|c/,h=c.test(i[l]);return i[a]&&i[a](u,n=function(){i.removeEventListener(u,n,r),p()},r),o&&i.attachEvent(f,n=function(){/^c/.test(i[l])&&(i.detachEvent(f,n),p())}),e=o?function(n){self!=top?h?n():t.push(n):function(){try{s.doScroll(\"left\")}catch(t){return setTimeout(function(){e(n)},50)}n()}()}:function(e){h?e():t.push(e)}});\r\n\t\t\t\t// And everyone else.\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\t!function(e,t){_.DOMReady = t()}(\"domready\",function(){function s(t){i=1;while(t=e.shift())t()}var e=[],t,n=document,r=\"DOMContentLoaded\",i=/^loaded|^c/.test(n.readyState);return n.addEventListener(r,t=function(){n.removeEventListener(r,t),s()}),function(t){i?t():e.push(t)}});\r\n\r\n\t\t\t// _.indexOf\r\n\r\n\t\t\t\t// Wrap existing method if it exists.\r\n\t\t\t\t\tif (Array.prototype.indexOf)\r\n\t\t\t\t\t\t_.indexOf = function(x,b) { return x.indexOf(b) };\r\n\r\n\t\t\t\t// Otherwise, polyfill.\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\t_.indexOf = function(x,b){if (typeof x=='string') return x.indexOf(b);var c,a=(b)?b:0,e;if(!this){throw new TypeError()}e=this.length;if(e===0||a>=e){return -1}if(a<0){a=e-Math.abs(a)}for(c=a;c<e;c++){if(this[c]===x){return c}}return -1};\r\n\r\n\t\t\t// _.isArray\r\n\r\n\t\t\t\t// Wrap existing method if it exists.\r\n\t\t\t\t\tif (Array.isArray)\r\n\t\t\t\t\t\t_.isArray = function(x) { return Array.isArray(x) };\r\n\r\n\t\t\t\t// Otherwise, polyfill.\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\t_.isArray = function(x) { return (Object.prototype.toString.call(x) === '[object Array]') };\r\n\r\n\t\t\t// _.iterate\r\n\r\n\t\t\t\t// Use Object.keys if it exists (= better performance).\r\n\t\t\t\t\tif (Object.keys)\r\n\t\t\t\t\t\t_.iterate = function(a, f) {\r\n\r\n\t\t\t\t\t\t\tif (!a)\r\n\t\t\t\t\t\t\t\treturn [];\r\n\r\n\t\t\t\t\t\t\tvar i, k = Object.keys(a);\r\n\r\n\t\t\t\t\t\t\tfor (i = 0; k[i]; i++) {\r\n\r\n\t\t\t\t\t\t\t\tif ((f)(k[i], a[k[i]]) === false)\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t// Otherwise, fall back on hasOwnProperty (= slower, but works on older browsers).\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\t_.iterate = function(a, f) {\r\n\r\n\t\t\t\t\t\t\tif (!a)\r\n\t\t\t\t\t\t\t\treturn [];\r\n\r\n\t\t\t\t\t\t\tvar i;\r\n\r\n\t\t\t\t\t\t\tfor (i in a)\r\n\t\t\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(a, i)) {\r\n\r\n\t\t\t\t\t\t\t\t\tif ((f)(i, a[i]) === false)\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t// _.matchesMedia\r\n\r\n\t\t\t\t// Default: Use matchMedia (all modern browsers)\r\n\t\t\t\t\tif (window.matchMedia)\r\n\t\t\t\t\t\t_.matchesMedia = function(query) {\r\n\r\n\t\t\t\t\t\t\tif (query == '')\r\n\t\t\t\t\t\t\t\treturn true;\r\n\r\n\t\t\t\t\t\t\treturn window.matchMedia(query).matches;\r\n\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t// Polyfill 1: Use styleMedia/media (IE9, older Webkit) (derived from github.com/paulirish/matchMedia.js)\r\n\t\t\t\t\telse if (window.styleMedia || window.media)\r\n\t\t\t\t\t\t_.matchesMedia = function(query) {\r\n\r\n\t\t\t\t\t\t\tif (query == '')\r\n\t\t\t\t\t\t\t\treturn true;\r\n\r\n\t\t\t\t\t\t\tvar styleMedia = (window.styleMedia || window.media);\r\n\r\n\t\t\t\t\t\t\treturn styleMedia.matchMedium(query || 'all');\r\n\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t// Polyfill 2: Use getComputed Style (???) (derived from github.com/paulirish/matchMedia.js)\r\n\t\t\t\t\telse if (window.getComputedStyle)\r\n\t\t\t\t\t\t_.matchesMedia = function(query) {\r\n\r\n\t\t\t\t\t\t\tif (query == '')\r\n\t\t\t\t\t\t\t\treturn true;\r\n\r\n\t\t\t\t\t\t\tvar\tstyle = document.createElement('style'),\r\n\t\t\t\t\t\t\t\tscript = document.getElementsByTagName('script')[0],\r\n\t\t\t\t\t\t\t\tinfo = null;\r\n\r\n\t\t\t\t\t\t\tstyle.type = 'text/css';\r\n\t\t\t\t\t\t\tstyle.id = 'matchmediajs-test';\r\n\t\t\t\t\t\t\tscript.parentNode.insertBefore(style, script);\r\n\t\t\t\t\t\t\tinfo = ('getComputedStyle' in window) && window.getComputedStyle(style, null) || style.currentStyle;\r\n\r\n\t\t\t\t\t\t\tvar text = '@media ' + query + '{ #matchmediajs-test { width: 1px; } }';\r\n\r\n\t\t\t\t\t\t\tif (style.styleSheet)\r\n\t\t\t\t\t\t\t\tstyle.styleSheet.cssText = text;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tstyle.textContent = text;\r\n\r\n\t\t\t\t\t\t\treturn info.width === '1px';\r\n\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t// Polyfill 3: Manually parse (IE<9)\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\t_.matchesMedia = function(query) {\r\n\r\n\t\t\t\t\t\t\t// Empty query? Always succeed.\r\n\t\t\t\t\t\t\t\tif (query == '')\r\n\t\t\t\t\t\t\t\t\treturn true;\r\n\r\n\t\t\t\t\t\t\t// Parse query.\r\n\t\t\t\t\t\t\t\tvar k, s, a, b, values = { 'min-width': null, 'max-width': null },\r\n\t\t\t\t\t\t\t\t\tfound = false;\r\n\r\n\t\t\t\t\t\t\t\ta = query.split(/\\s+and\\s+/);\r\n\r\n\t\t\t\t\t\t\t\tfor (k = 0; k < a.length; k++) {\r\n\r\n\t\t\t\t\t\t\t\t\ts = a[k];\r\n\r\n\t\t\t\t\t\t\t\t\t// Operator (key: value)\r\n\t\t\t\t\t\t\t\t\t\tif (s.charAt(0) == '(') {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\ts = s.substring(1, s.length - 1);\r\n\t\t\t\t\t\t\t\t\t\t\tb = s.split(/:\\s+/);\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tif (b.length == 2) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalues[ b[0].replace(/^\\s+|\\s+$/g, '') ] = parseInt( b[1] );\r\n\t\t\t\t\t\t\t\t\t\t\t\tfound = true;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// No matches? Query likely contained something unsupported so we automatically fail.\r\n\t\t\t\t\t\t\t\tif (!found)\r\n\t\t\t\t\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t\t\t\t// Check against viewport.\r\n\t\t\t\t\t\t\t\tvar w = document.documentElement.clientWidth,\r\n\t\t\t\t\t\t\t\t\th = document.documentElement.clientHeight;\r\n\r\n\t\t\t\t\t\t\t\tif ((values['min-width'] !== null && w < values['min-width'])\r\n\t\t\t\t\t\t\t\t||\t(values['max-width'] !== null && w > values['max-width'])\r\n\t\t\t\t\t\t\t\t||\t(values['min-height'] !== null && h < values['min-height'])\r\n\t\t\t\t\t\t\t\t||\t(values['max-height'] !== null && h > values['max-height']))\r\n\t\t\t\t\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t\t\t\treturn true;\r\n\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t// _.newStyle\r\n\r\n\t\t\t\t// IE<9 fix.\r\n\t\t\t\t\tif (navigator.userAgent.match(/MSIE ([0-9]+)/)\r\n\t\t\t\t\t&&\tRegExp.$1 < 9)\r\n\t\t\t\t\t\t_.newStyle = function(content) {\r\n\r\n\t\t\t\t\t\t\tvar e = document.createElement('span');\r\n\t\t\t\t\t\t\t\te.innerHTML = '&nbsp;<style type=\"text/css\">' + content + '</style>';\r\n\r\n\t\t\t\t\t\t\treturn e;\r\n\r\n\t\t\t\t\t\t};\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Initializes the vars.\r\n\t\t */\r\n\t\tinitVars: function() {\r\n\r\n\t\t\tvar x, y, a, ua = navigator.userAgent;\r\n\r\n\t\t\t// browser, browserVersion.\r\n\t\t\t\tx = 'other';\r\n\t\t\t\ty = 0;\r\n\t\t\t\ta = [\r\n\t\t\t\t\t['firefox',\t\t/Firefox\\/([0-9\\.]+)/],\r\n\t\t\t\t\t['bb',\t\t\t/BlackBerry.+Version\\/([0-9\\.]+)/],\r\n\t\t\t\t\t['bb',\t\t\t/BB[0-9]+.+Version\\/([0-9\\.]+)/],\r\n\t\t\t\t\t['opera',\t\t/OPR\\/([0-9\\.]+)/],\r\n\t\t\t\t\t['opera',\t\t/Opera\\/([0-9\\.]+)/],\r\n\t\t\t\t\t['edge',\t\t/Edge\\/([0-9\\.]+)/],\r\n\t\t\t\t\t['safari',\t\t/Version\\/([0-9\\.]+).+Safari/],\r\n\t\t\t\t\t['chrome',\t\t/Chrome\\/([0-9\\.]+)/],\r\n\t\t\t\t\t['ie', \t\t\t/MSIE ([0-9]+)/],\r\n\t\t\t\t\t['ie',\t\t\t/Trident\\/.+rv:([0-9]+)/]\r\n\t\t\t\t];\r\n\r\n\t\t\t\t_.iterate(a, function(k, v) {\r\n\r\n\t\t\t\t\tif (ua.match(v[1])) {\r\n\r\n\t\t\t\t\t\tx = v[0];\r\n\t\t\t\t\t\ty = parseFloat(RegExp.$1);\r\n\r\n\t\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t});\r\n\r\n\t\t\t\t_.vars.browser = x;\r\n\t\t\t\t_.vars.browserVersion = y;\r\n\r\n\t\t\t// os, osVersion.\r\n\t\t\t\tx = 'other';\r\n\t\t\t\ty = 0;\r\n\t\t\t\ta = [\r\n\t\t\t\t\t['ios',\t\t\t/([0-9_]+) like Mac OS X/,\t\t\tfunction(v) { return v.replace('_', '.').replace('_', ''); }],\r\n\t\t\t\t\t['ios',\t\t\t/CPU like Mac OS X/,\t\t\t\tfunction(v) { return 0 }],\r\n\t\t\t\t\t['wp',\t\t\t/Windows Phone ([0-9\\.]+)/,\t\t\tnull],\r\n\t\t\t\t\t['android',\t\t/Android ([0-9\\.]+)/,\t\t\t\tnull],\r\n\t\t\t\t\t['mac',\t\t\t/Macintosh.+Mac OS X ([0-9_]+)/,\tfunction(v) { return v.replace('_', '.').replace('_', ''); }],\r\n\t\t\t\t\t['windows',\t\t/Windows NT ([0-9\\.]+)/,\t\t\tnull],\r\n\t\t\t\t\t['bb',\t\t\t/BlackBerry.+Version\\/([0-9\\.]+)/,\tnull],\r\n\t\t\t\t\t['bb',\t\t\t/BB[0-9]+.+Version\\/([0-9\\.]+)/,\tnull]\r\n\t\t\t\t];\r\n\r\n\t\t\t\t_.iterate(a, function(k, v) {\r\n\r\n\t\t\t\t\tif (ua.match(v[1])) {\r\n\r\n\t\t\t\t\t\tx = v[0];\r\n\t\t\t\t\t\ty = parseFloat( v[2] ? (v[2])(RegExp.$1) : RegExp.$1 );\r\n\r\n\t\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t});\r\n\r\n\t\t\t\t_.vars.os = x;\r\n\t\t\t\t_.vars.osVersion = y;\r\n\r\n\t\t\t// IEVersion.\r\n\t\t\t\t_.vars.IEVersion = (_.vars.browser == 'ie' ? _.vars.browserVersion : 99);\r\n\r\n\t\t\t// touch.\r\n\t\t\t\t_.vars.touch = (_.vars.os == 'wp' ? (navigator.msMaxTouchPoints > 0) : !!('ontouchstart' in window));\r\n\r\n\t\t\t// mobile.\r\n\t\t\t\t_.vars.mobile = (_.vars.os == 'wp' || _.vars.os == 'android' || _.vars.os == 'ios' || _.vars.os == 'bb');\r\n\r\n\t\t},\r\n\r\n}; _.init(); return _; })();\r\n\r\n// UMD Wrapper (github.com/umdjs/umd/blob/master/returnExports.js | @umdjs + @nason)\r\n(function(root, factory) {\r\n\r\n\t// AMD.\r\n\t\tif (true)\r\n\t\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\r\n\t// Node.\r\n\t\telse if (typeof exports === 'object')\r\n\t\t\tmodule.exports = factory();\r\n\r\n\t// Browser global.\r\n\t\telse\r\n\t\t\troot.skel = factory();\r\n\r\n}(this, function() { return skel; }));\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },

/***/ 341:
/***/ function(module, exports, __webpack_require__) {

"use strict";
eval("'use strict';\n\nvar _skelFramework = __webpack_require__(307);\n\nvar _skelFramework2 = _interopRequireDefault(_skelFramework);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(function ($) {\n\n  _skelFramework2.default.breakpoints({\n    xlarge: '(max-width: 1680px)',\n    large: '(max-width: 1280px)',\n    medium: '(max-width: 980px)',\n    small: '(max-width: 736px)',\n    xsmall: '(max-width: 480px)',\n    xxsmall: '(max-width: 360px)'\n  });\n\n  $(function () {\n\n    var $window = $(window),\n        $body = $('body'),\n        $main = $('#main');\n\n    // Disable animations/transitions until the page has loaded.\n    $body.addClass('is-loading');\n\n    $window.on('load', function () {\n      window.setTimeout(function () {\n        $body.removeClass('is-loading');\n      }, 100);\n    });\n\n    // Fix: Placeholder polyfill.\n    $('form').placeholder();\n\n    // Prioritize \"important\" elements on medium.\n    _skelFramework2.default.on('+medium -medium', function () {\n      $.prioritize('.important\\\\28 medium\\\\29', _skelFramework2.default.breakpoint('medium').active);\n    });\n\n    // Nav.\n    var $nav = $('#nav');\n\n    if ($nav.length > 0) {\n\n      // Shrink effect.\n      $main.scrollex({\n        mode: 'top',\n        enter: function enter() {\n          $nav.addClass('alt');\n        },\n        leave: function leave() {\n          $nav.removeClass('alt');\n        }\n      });\n\n      // Links.\n      var $nav_a = $nav.find('a');\n\n      $nav_a.scrolly({\n        speed: 1000,\n        offset: function offset() {\n          return $nav.height();\n        }\n      }).on('click', function () {\n\n        var $this = $(this);\n\n        // External link? Bail.\n        if ($this.attr('href').charAt(0) != '#') return;\n\n        // Deactivate all links.\n        $nav_a.removeClass('active').removeClass('active-locked');\n\n        // Activate link *and* lock it (so Scrollex doesn't try to activate other links as we're scrolling to this one's section).\n        $this.addClass('active').addClass('active-locked');\n      }).each(function () {\n\n        var $this = $(this),\n            id = $this.attr('href'),\n            $section = $(id);\n\n        // No section for this link? Bail.\n        if ($section.length < 1) return;\n\n        // Scrollex.\n        $section.scrollex({\n          mode: 'middle',\n          initialize: function initialize() {\n\n            // Deactivate section.\n            if (_skelFramework2.default.canUse('transition')) $section.addClass('inactive');\n          },\n\n          enter: function enter() {\n\n            // Activate section.\n            $section.removeClass('inactive');\n\n            // No locked links? Deactivate all links and activate this section's one.\n            if ($nav_a.filter('.active-locked').length == 0) {\n\n              $nav_a.removeClass('active');\n              $this.addClass('active' // Otherwise, if this section's link is the one that's locked, unlock it.\n              );\n            } else if ($this.hasClass('active-locked')) $this.removeClass('active-locked');\n          }\n        });\n      });\n    }\n\n    // Scrolly.\n    $('.scrolly').scrolly({ speed: 1000 });\n  });\n})(jQuery);//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzQxLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2pzL21haW4uanM/YWNhZSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBfc2tlbEZyYW1ld29yayA9IHJlcXVpcmUoJ3NrZWwtZnJhbWV3b3JrJyk7XG5cbnZhciBfc2tlbEZyYW1ld29yazIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9za2VsRnJhbWV3b3JrKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuKGZ1bmN0aW9uICgkKSB7XG5cbiAgX3NrZWxGcmFtZXdvcmsyLmRlZmF1bHQuYnJlYWtwb2ludHMoe1xuICAgIHhsYXJnZTogJyhtYXgtd2lkdGg6IDE2ODBweCknLFxuICAgIGxhcmdlOiAnKG1heC13aWR0aDogMTI4MHB4KScsXG4gICAgbWVkaXVtOiAnKG1heC13aWR0aDogOTgwcHgpJyxcbiAgICBzbWFsbDogJyhtYXgtd2lkdGg6IDczNnB4KScsXG4gICAgeHNtYWxsOiAnKG1heC13aWR0aDogNDgwcHgpJyxcbiAgICB4eHNtYWxsOiAnKG1heC13aWR0aDogMzYwcHgpJ1xuICB9KTtcblxuICAkKGZ1bmN0aW9uICgpIHtcblxuICAgIHZhciAkd2luZG93ID0gJCh3aW5kb3cpLFxuICAgICAgICAkYm9keSA9ICQoJ2JvZHknKSxcbiAgICAgICAgJG1haW4gPSAkKCcjbWFpbicpO1xuXG4gICAgLy8gRGlzYWJsZSBhbmltYXRpb25zL3RyYW5zaXRpb25zIHVudGlsIHRoZSBwYWdlIGhhcyBsb2FkZWQuXG4gICAgJGJvZHkuYWRkQ2xhc3MoJ2lzLWxvYWRpbmcnKTtcblxuICAgICR3aW5kb3cub24oJ2xvYWQnLCBmdW5jdGlvbiAoKSB7XG4gICAgICB3aW5kb3cuc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICRib2R5LnJlbW92ZUNsYXNzKCdpcy1sb2FkaW5nJyk7XG4gICAgICB9LCAxMDApO1xuICAgIH0pO1xuXG4gICAgLy8gRml4OiBQbGFjZWhvbGRlciBwb2x5ZmlsbC5cbiAgICAkKCdmb3JtJykucGxhY2Vob2xkZXIoKTtcblxuICAgIC8vIFByaW9yaXRpemUgXCJpbXBvcnRhbnRcIiBlbGVtZW50cyBvbiBtZWRpdW0uXG4gICAgX3NrZWxGcmFtZXdvcmsyLmRlZmF1bHQub24oJyttZWRpdW0gLW1lZGl1bScsIGZ1bmN0aW9uICgpIHtcbiAgICAgICQucHJpb3JpdGl6ZSgnLmltcG9ydGFudFxcXFwyOCBtZWRpdW1cXFxcMjknLCBfc2tlbEZyYW1ld29yazIuZGVmYXVsdC5icmVha3BvaW50KCdtZWRpdW0nKS5hY3RpdmUpO1xuICAgIH0pO1xuXG4gICAgLy8gTmF2LlxuICAgIHZhciAkbmF2ID0gJCgnI25hdicpO1xuXG4gICAgaWYgKCRuYXYubGVuZ3RoID4gMCkge1xuXG4gICAgICAvLyBTaHJpbmsgZWZmZWN0LlxuICAgICAgJG1haW4uc2Nyb2xsZXgoe1xuICAgICAgICBtb2RlOiAndG9wJyxcbiAgICAgICAgZW50ZXI6IGZ1bmN0aW9uIGVudGVyKCkge1xuICAgICAgICAgICRuYXYuYWRkQ2xhc3MoJ2FsdCcpO1xuICAgICAgICB9LFxuICAgICAgICBsZWF2ZTogZnVuY3Rpb24gbGVhdmUoKSB7XG4gICAgICAgICAgJG5hdi5yZW1vdmVDbGFzcygnYWx0Jyk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICAvLyBMaW5rcy5cbiAgICAgIHZhciAkbmF2X2EgPSAkbmF2LmZpbmQoJ2EnKTtcblxuICAgICAgJG5hdl9hLnNjcm9sbHkoe1xuICAgICAgICBzcGVlZDogMTAwMCxcbiAgICAgICAgb2Zmc2V0OiBmdW5jdGlvbiBvZmZzZXQoKSB7XG4gICAgICAgICAgcmV0dXJuICRuYXYuaGVpZ2h0KCk7XG4gICAgICAgIH1cbiAgICAgIH0pLm9uKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcblxuICAgICAgICB2YXIgJHRoaXMgPSAkKHRoaXMpO1xuXG4gICAgICAgIC8vIEV4dGVybmFsIGxpbms/IEJhaWwuXG4gICAgICAgIGlmICgkdGhpcy5hdHRyKCdocmVmJykuY2hhckF0KDApICE9ICcjJykgcmV0dXJuO1xuXG4gICAgICAgIC8vIERlYWN0aXZhdGUgYWxsIGxpbmtzLlxuICAgICAgICAkbmF2X2EucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpLnJlbW92ZUNsYXNzKCdhY3RpdmUtbG9ja2VkJyk7XG5cbiAgICAgICAgLy8gQWN0aXZhdGUgbGluayAqYW5kKiBsb2NrIGl0IChzbyBTY3JvbGxleCBkb2Vzbid0IHRyeSB0byBhY3RpdmF0ZSBvdGhlciBsaW5rcyBhcyB3ZSdyZSBzY3JvbGxpbmcgdG8gdGhpcyBvbmUncyBzZWN0aW9uKS5cbiAgICAgICAgJHRoaXMuYWRkQ2xhc3MoJ2FjdGl2ZScpLmFkZENsYXNzKCdhY3RpdmUtbG9ja2VkJyk7XG4gICAgICB9KS5lYWNoKGZ1bmN0aW9uICgpIHtcblxuICAgICAgICB2YXIgJHRoaXMgPSAkKHRoaXMpLFxuICAgICAgICAgICAgaWQgPSAkdGhpcy5hdHRyKCdocmVmJyksXG4gICAgICAgICAgICAkc2VjdGlvbiA9ICQoaWQpO1xuXG4gICAgICAgIC8vIE5vIHNlY3Rpb24gZm9yIHRoaXMgbGluaz8gQmFpbC5cbiAgICAgICAgaWYgKCRzZWN0aW9uLmxlbmd0aCA8IDEpIHJldHVybjtcblxuICAgICAgICAvLyBTY3JvbGxleC5cbiAgICAgICAgJHNlY3Rpb24uc2Nyb2xsZXgoe1xuICAgICAgICAgIG1vZGU6ICdtaWRkbGUnLFxuICAgICAgICAgIGluaXRpYWxpemU6IGZ1bmN0aW9uIGluaXRpYWxpemUoKSB7XG5cbiAgICAgICAgICAgIC8vIERlYWN0aXZhdGUgc2VjdGlvbi5cbiAgICAgICAgICAgIGlmIChfc2tlbEZyYW1ld29yazIuZGVmYXVsdC5jYW5Vc2UoJ3RyYW5zaXRpb24nKSkgJHNlY3Rpb24uYWRkQ2xhc3MoJ2luYWN0aXZlJyk7XG4gICAgICAgICAgfSxcblxuICAgICAgICAgIGVudGVyOiBmdW5jdGlvbiBlbnRlcigpIHtcblxuICAgICAgICAgICAgLy8gQWN0aXZhdGUgc2VjdGlvbi5cbiAgICAgICAgICAgICRzZWN0aW9uLnJlbW92ZUNsYXNzKCdpbmFjdGl2ZScpO1xuXG4gICAgICAgICAgICAvLyBObyBsb2NrZWQgbGlua3M/IERlYWN0aXZhdGUgYWxsIGxpbmtzIGFuZCBhY3RpdmF0ZSB0aGlzIHNlY3Rpb24ncyBvbmUuXG4gICAgICAgICAgICBpZiAoJG5hdl9hLmZpbHRlcignLmFjdGl2ZS1sb2NrZWQnKS5sZW5ndGggPT0gMCkge1xuXG4gICAgICAgICAgICAgICRuYXZfYS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XG4gICAgICAgICAgICAgICR0aGlzLmFkZENsYXNzKCdhY3RpdmUnIC8vIE90aGVyd2lzZSwgaWYgdGhpcyBzZWN0aW9uJ3MgbGluayBpcyB0aGUgb25lIHRoYXQncyBsb2NrZWQsIHVubG9jayBpdC5cbiAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoJHRoaXMuaGFzQ2xhc3MoJ2FjdGl2ZS1sb2NrZWQnKSkgJHRoaXMucmVtb3ZlQ2xhc3MoJ2FjdGl2ZS1sb2NrZWQnKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgLy8gU2Nyb2xseS5cbiAgICAkKCcuc2Nyb2xseScpLnNjcm9sbHkoeyBzcGVlZDogMTAwMCB9KTtcbiAgfSk7XG59KShqUXVlcnkpO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2pzL21haW4uanNcbi8vIG1vZHVsZSBpZCA9IDM0MVxuLy8gbW9kdWxlIGNodW5rcyA9IDIiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }

});